# /etc/nginx/sites-available/drawwave.conf

# Frontend application configuration
server {
    listen 80;
    server_name app.drawwave.space;
    
    # Logs
    access_log /var/log/nginx/drawwave_frontend_access.log;
    error_log /var/log/nginx/drawwave_frontend_error.log;

    # Cloudflare Real IP restoration
    real_ip_header CF-Connecting-IP;
    
    # Frontend application (running on port 81)
    location / {
        proxy_pass http://localhost:81;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}

# Backend API configuration
server {
    listen 80;
    server_name api.drawwave.space;
    
    # Logs
    access_log /var/log/nginx/drawwave_backend_access.log;
    error_log /var/log/nginx/drawwave_backend_error.log;

    # Cloudflare Real IP restoration
    real_ip_header CF-Connecting-IP;
    
    # Backend API (running on port 5000)
    location / {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Handle OPTIONS method for CORS preflight
    location = /api/auth/verify {
        if ($request_method = 'OPTIONS') {
            # Set CORS headers only once
            add_header 'Access-Control-Allow-Origin' 'https://app.drawwave.space' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, x-auth-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' '1728000' always;
            add_header 'Content-Type' 'text/plain charset=UTF-8' always;
            add_header 'Content-Length' '0' always;
            return 204;
        }
        
        # For non-OPTIONS requests
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}

# Inference WebSocket server configuration
server {
    listen 80;
    server_name inference.drawwave.space;
    
    # Logs
    access_log /var/log/nginx/drawwave_inference_access.log;
    error_log /var/log/nginx/drawwave_inference_error.log debug;

    # Cloudflare Real IP restoration
    real_ip_header CF-Connecting-IP;
    
    # Main location for WebSocket connections
    location / {
        # WebSocket specific settings
        proxy_pass http://localhost:8765;
        proxy_http_version 1.1;
        
        # Critical WebSocket headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Additional headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeouts for WebSockets
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
        
        # CORS headers
        add_header Access-Control-Allow-Origin 'https://app.drawwave.space' always;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
        add_header Access-Control-Allow-Headers '*' always;
        add_header Access-Control-Allow-Credentials 'true' always;
    }
    
    # Health check endpoint (for monitoring)
    location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "WebSocket server is configured";
    }
}

# Redirect main domain to app subdomain (optional)
server {
    listen 80;
    server_name drawwave.space www.drawwave.space;
    
    location / {
        return 301 https://app.drawwave.space$request_uri;
    }
}